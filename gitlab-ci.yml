image: alpine/terragrunt:1.12.2

stages:
  - validate
  - plan
  - apply

before_script:
  - unzip -o terraform-plugins.zip
  - export TF_VAR_vsphere_password=$(echo "$TF_VAR_vsphere_password" | base64 -d)
  - echo "$TF_VAR_vsphere_password"
  - mkdir -p ~/.terraform.d/plugins/registry.terraform.io/hashicorp/vsphere/2.12.0/linux_amd64
  - cp terraform-plugins/registry.terraform.io/hashicorp/vsphere/2.12.0/terraform-provider-vsphere_v2.12.0 ~/.terraform.d/plugins/registry.terraform.io/hashicorp/vsphere/2.12.0/linux_amd64
  - ls -la terraform-plugins/registry.terraform.io/hashicorp/vsphere/2.12.0
  - chmod +x ~/.terraform.d/plugins/registry.terraform.io/hashicorp/vsphere/2.12.0/linux_amd64/terraform-provider-vsphere_v2.12.0
  - echo "$TF_VAR_vsphere_user"
  - echo "$TF_VAR_vsphere_server"
  
validate:
  stage: validate
  tags:
    - docker
  script:
    - terraform init -backend=false
    - terraform validate

plan:
  stage: plan
  tags:
    - docker
  script:
    - unzip -o terraform-plugins.zip
    - chmod -R +x terraform-plugins
    - terraform init -backend=false
    - terraform plan -var-file=terraform.tfvars -out=tfplan
  artifacts:
    paths:
      - tfplan
      - .terraform.lock.hcl
apply:
  stage: apply
  tags:
    - docker
  script:
    - terraform apply "tfplan"
  when: manual
  allow_failure: false
